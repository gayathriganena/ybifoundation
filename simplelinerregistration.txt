# Step 1 : import library
import pandas as pd
     

# Step 2 : import data
salary = pd.read_csv('https://github.com/ybifoundation/Dataset/raw/main/Salary%20Data.csv')
     

# Step 3 : define target (y) and features (X)
     

salary.columns
     
Index(['Experience Years', 'Salary'], dtype='object')

y = salary['Salary']
     

X = salary[['Experience Years']]
     

# Step 4 : train test split
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y, train_size=0.7, random_state=2529)
     

# check shape of train and test sample
X_train.shape, X_test.shape, y_train.shape, y_test.shape
     
((28, 1), (12, 1), (28,), (12,))

# Step 5 : select model
from sklearn.linear_model import LinearRegression
model = LinearRegression()
     

# Step 6 : train or fit model
model.fit(X_train,y_train)
     
LinearRegression()
In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook.
On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.

model.intercept_
     
26596.961311068262

model.coef_
     
array([9405.61663234])

# Step 7 : predict model
y_pred = model.predict(X_test)
     

y_pred
     
array([ 90555.15441095,  59516.61952424, 106544.70268592,  64219.42784041,
        68922.23615658, 123474.81262412,  84911.78443155,  63278.86617718,
        65159.98950364,  61397.74285071,  37883.70126987,  50111.00289191])

# Step 8 : model accuracy
from sklearn.metrics import mean_absolute_error, mean_absolute_percentage_error, mean_squared_error
     

mean_absolute_error(y_test,y_pred)
     
4005.9263101681768

mean_absolute_percentage_error(y_test,y_pred)
     
0.06384602996141632

mean_squared_error(y_test,y_pred)
     
24141421.671440993